{"version":3,"sources":["Saga/universalHTTPRequestSaga.js","Saga/rootSaga.js","CovidChart/Redux/CovidChart.actions.js","CovidChart/CovidChart.constants.js","CovidChart/CovidChart.helpers.js","CovidChart/Redux/CovidChart.reducer.js","Redux/rootReducer.js","Redux/store.js","CovidChart/CovidChart.js","App.js","index.js"],"names":["request","universalHTTPRequestSaga","doFetch","processAs","fetchArgs","fetch","then","response","status","Error","statusText","data","catch","err","action","type","payload","_type","replace","call","put","takeLatest","endsWith","rootSaga","all","COVID_DATA_REQUEST","COVID_DATA_SUCCESS","COVID_DATA_FAILURE","SET_SELECTED_STATE","SET_SELECTED_INTERVAL","SET_DRILL_DOWN_DATA","fetchCovidData","dispatch","setSelectedState","selectedState","setSelectedInterval","selectedInterval","setDrillDownData","INTERVALS","BY_DAYS","BY_MONTHS","LAST_SEVEN_DAYS","LAST_MONTH","aggregateBy","interval","entries","reduce","acc","entry","date","cases","deaths","slice","aggregationToArray","aggObj","key","Object","keys","map","_key","defaultState","covidData","states","errorRequest","value","label","defaultSelectedState","drillDownData","reducers","state","str","previousCases","Set","split","line","add","newCases","newDeaths","Array","from","sort","a","b","parserCovidDataCSV","length","filter","startsWith","combinedReducers","combineReducers","covidChart","sagaMiddleware","createSagaMiddleware","store","createStore","rootReducer","applyMiddleware","thunk","run","getDropDown","items","onChange","firstValue","options","concat","item","connect","bindActionCreators","covidChartActions","props","useEffect","onChartClick","useCallback","activeLabel","bar","onClick","margin","top","right","left","bottom","strokeDasharray","dataKey","stackId","fill","getBarChart","_data","push","_dataByDays","_lastDayDate","getFilteredData","statesDropDown","intervalsDropDown","values","drillDownTable","className","idx","getDrillDownTable","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"w2BAaUA,G,WAaAC,GAxBJC,EAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,UAAd,OAA8B,kBAC5CC,MAAK,WAAL,cAASD,IACNE,MAAK,SAACC,GACL,GAAwB,MAApBA,EAASC,OACX,MAAM,IAAIC,MAAJ,UAAaF,EAASC,OAAtB,aAAiCD,EAASG,aAElD,OAAOH,EAASJ,QAEjBG,MAAK,SAACK,GAAD,MAAY,CAAEA,WACnBC,OAAM,SAACC,GAAD,MAAU,CAAEA,YAEvB,SAAUb,EAAQc,GAAlB,qFAK0B,OAJhBC,EAA4CD,EAA5CC,KADV,EACsDD,EAAtCE,QAAWb,EAD3B,EAC2BA,UAAWC,EADtC,EACsCA,UAC9Ba,EAAQF,EAAKG,QAAQ,WAAY,IAFzC,kBAKgCC,YAAKjB,EAAQ,CAAEC,YAAWC,eAL1D,mBAKYO,EALZ,EAKYA,OAAME,EALlB,EAKkBA,KALlB,uBAMqBA,EANrB,QAOI,OAPJ,UAOUO,YAAI,CAAEL,KAAK,GAAD,OAAKE,EAAL,YAAsBD,QAASL,IAPnD,gCASI,OATJ,oCASUS,YAAI,CAAEL,KAAK,GAAD,OAAKE,EAAL,YAAsBD,QAAQ,EAAD,KATjD,sDAaA,SAAUf,IAAV,iEACE,OADF,SACQoB,aAAW,SAACP,GAAD,OAAaA,EAAOC,KAAKO,SAAS,cAActB,GADnE,uCAIeC,Q,WC3BUsB,GAAV,SAAUA,IAAV,iEACb,OADa,SACPC,YAAI,CACRvB,MAFW,uC,8BCFFwB,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAwB,wBACxBC,EAAsB,sBAEtBC,EAAiB,kBAAM,SAACC,GACnCA,EAAS,CACPjB,KAAMU,EACNT,QAAS,CACPb,UAAW,OACXC,UAAW,CAGT,wBAMK6B,EAAmB,SAACC,GAAD,OAAmB,SAACF,GAClDA,EAAS,CACPjB,KAAMa,EACNZ,QAASkB,MAIAC,EAAsB,SAACC,GAAD,OAAsB,SAACJ,GACxDA,EAAS,CACPjB,KAAMc,EACNb,QAASoB,MAIAC,EAAmB,SAACD,GAAD,OAAsB,SAACJ,GACrDA,EAAS,CACPjB,KAAMe,EACNd,QAASoB,MCtCAE,EAAY,CACvBC,QAAS,UACTC,UAAW,YACXC,gBAAiB,kBACjBC,WAAY,cC0CDC,EAAc,SAACC,EAAUC,GACpC,OAAOA,EAAQC,QAAO,SAACC,EAAKC,GAAW,IAC7BC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OACfC,EAAQR,IAAaN,EAAUE,UAAYS,EAAKG,MAAM,EAAG,GAAKH,EAKpE,OAJAF,EAAIK,GAAS,CACXF,QAASH,EAAIK,IAAU,IAAIF,OAAS,GAAKA,EACzCC,SAAUJ,EAAIK,IAAU,IAAID,QAAU,GAAKA,GAEtCJ,IACN,KAGQM,EAAqB,SAACC,GAAuC,IAAD,yDAAP,GAAO,IAA5BC,WAA4B,MAAtB,WAAsB,EACvE,OAAOC,OAAOC,KAAKH,GAChBI,KAAI,SAACC,GAAD,mBAAC,eAAaJ,EAAMI,GAASL,EAAOK,QCjDvCC,EAAe,CACnBC,UAAW,KACXC,OAAQ,KACRC,aAAc,KACd7B,cAAe,CAAE8B,MFhBO,MEgBYC,MFhBZ,OEiBxBC,qBAAsB,CAAEF,MFjBA,MEiBmBC,MFjBnB,OEkBxB7B,iBAAkB,CAAE4B,MAAO1B,EAAUE,UAAWyB,MAAO3B,EAAUE,WACjE2B,cAAe,MAGXC,GAAQ,mBACX3C,GAAqB,SAACX,EAAQuD,GAC7B,OAAO,2BACFA,GADL,IAEER,UAAW,KACXC,OAAQ,KACRC,aAAc,UANN,cASXrC,GAAqB,SAACZ,EAAQuD,GAAW,IAAD,ED5BT,SAACC,GAGjC,IAAMC,EAAgB,GAChBT,EAAS,IAAIU,IAyBnB,MAAO,CAxBOF,EAAIG,MAAM,MAAMrB,MAAM,GAAGM,KAAI,SAACgB,GAAU,IAAD,EACXA,EAAKD,MAAM,KADA,mBAC5CxB,EAD4C,KACtCoB,EADsC,KAC5BnB,GAD4B,WACrBC,EADqB,KAEnDW,EAAOa,IAAIN,GACX,IAAMO,EAAW1B,IAAUqB,EAAcF,IAAU,IAAInB,OAAS,GAC1D2B,EAAY1B,IAAWoB,EAAcF,IAAU,IAAIlB,QAAU,GAInE,OAFAoB,EAAcF,GAAS,CAAEnB,QAAOC,UAEzB,CACLF,OACAoB,QAOAnB,MAAO0B,EAAW,EAAI,EAAIA,EAC1BzB,OAAQ0B,EAAY,EAAI,EAAIA,MAMjBC,MAAMC,KAAKjB,GAAQkB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,GAAK,EAAID,EAAIC,EAAI,EAAI,MCC5CC,CADRrE,EAAZE,SAD+B,mBAEhC6C,EAFgC,KAErBC,EAFqB,KAGvC,OAAO,2BACFO,GADL,IAEER,YACAC,cAfQ,cAkBXnC,GAAqB,SAACb,EAAQuD,GAAW,IAChCrD,EAAYF,EAAZE,QACR,OAAO,2BACFqD,GADL,IAEEN,aAAc/C,OAtBN,cAyBXY,GAAqB,SAACd,EAAQuD,GAAW,IAChCrD,EAAYF,EAAZE,QACR,OAAO,2BACFqD,GADL,IAEEnC,cAAelB,EACfmD,cAAe,UA9BP,cAiCXtC,GAAwB,SAACf,EAAQuD,GAAW,IACnCrD,EAAYF,EAAZE,QACR,OAAO,2BACFqD,GADL,IAEEjC,iBAAkBpB,EAClBmD,cAAe,UAtCP,cAyCXrC,GAAsB,SAAChB,EAAQuD,GAAW,IDqBZ1D,EAAMiC,ECpB3B5B,EAAYF,EAAZE,QACR,OAAKA,EAME,2BACFqD,GADL,IAEEF,eDW2BxD,ECXK0D,EAAMR,UDWLjB,ECXgB5B,EDY7B,KAApB4B,EAASwC,OACJzE,EAAK0E,QAAO,SAACrC,GAAD,OAAWA,EAAMC,OAASL,KAExCS,EAAmB1C,EAAK0E,QAAO,SAACrC,GAAD,OAAWA,EAAMC,KAAKqC,WAAW1C,MAAWE,QAAO,SAACC,EAAKC,GAAW,IAChGC,EAA+BD,EAA/BC,KAAMoB,EAAyBrB,EAAzBqB,MAAOnB,EAAkBF,EAAlBE,MAAOC,EAAWH,EAAXG,OAM5B,OALAJ,EAAIsB,GAAS,CACXnB,QAASH,EAAIsB,IAAU,IAAInB,OAAS,GAAKA,EACzCC,SAAUJ,EAAIsB,IAAU,IAAIlB,QAAU,GAAKA,EAC3CF,KAAMA,EAAKG,MAAM,EAAG,IAEfL,IACN,IAAK,CAAEQ,IAAK,UAAWyB,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEZ,MAAQa,EAAEb,OAAS,EAAIY,EAAEZ,MAAQa,EAAEb,MAAQ,EAAI,QC9B/E,2BACFA,GADL,IAEEF,cAAe,UA9CT,GCjBCoB,EAHUC,YAAgB,CACvCC,WD2Ea,WAAmC,IAAlCpB,EAAiC,uDAAzBT,EAAc9C,EAAW,uCAC/C,OAAOsD,EAAStD,EAAOC,MAAQqD,EAAStD,EAAOC,MAAMD,EAAQuD,GAASA,KEzElEqB,EAAiBC,cAEjBC,EAAQC,YACZC,EACAC,YAAgBC,IAAON,IAOzBA,EAAeO,IAAI1E,G,4BCkBb2E,G,OAAc,SAACC,EAAOC,EAAUpC,EAAOqC,GAC3C,IAAMC,GAAWD,EAAa,CAACA,GAAc,IAC1CE,OAAOJ,EAAMzC,KAAI,SAAC8C,GAAD,MAAW,CAAExC,MAAOwC,EAAMvC,MAAOuC,OACrD,OACE,kBAAC,IAAD,CAAQxC,MAAOA,EAAOsC,QAASA,EAASF,SAAUA,MA6FvCK,eAHS,SAAApC,GAAK,OAAIA,EAAMoB,cACZ,SAAAzD,GAAQ,OAAI0E,YAAmBC,EAAmB3E,KAE9DyE,EAtEI,SAACG,GAAW,IAE3B7E,EAIE6E,EAJF7E,eAAgB8B,EAId+C,EAJc/C,UAChBC,EAGE8C,EAHF9C,OAAQ7B,EAGN2E,EAHM3E,iBAAkBC,EAGxB0E,EAHwB1E,cAAegC,EAGvC0C,EAHuC1C,qBACzC/B,EAEEyE,EAFFzE,oBAAqBC,EAEnBwE,EAFmBxE,iBACrB+B,EACEyC,EADFzC,cAAe9B,EACbuE,EADavE,iBAGjBwE,oBAAU9E,EAAgB,IAC1B,IAAM+E,EAAeC,uBAAY,SAACpG,GAChC0B,EAAiB1B,GAAQA,EAAKqG,eAC7B,IAEH,IAAKnD,EACH,MAAO,cAGT,IAEMoD,EAlEY,SAACtG,EAAMmG,GACzB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEI,QAASJ,EACTnG,KAAMA,EACNwG,OAAQ,CAAEC,IAAK,GAAIC,MAAO,GAAIC,KAAM,GAAIC,OAAQ,IAEhD,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,aACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CAAKA,QAAQ,SAASC,QAAQ,IAAIC,KAAK,cACvC,kBAAC,IAAD,CAAKF,QAAQ,QAAQC,QAAQ,IAAIC,KAAK,aAoDhCC,CJjBiB,SAACjH,EAAMiC,EAAUyB,GAAW,IAAD,EA7B5BxB,EA8BtBgF,EDjEkB,QCiEVxD,EAAuB1D,GA9BTkC,EA8B8BlC,EA7BnDkC,EAAQC,QAAO,SAACC,EAAKC,GAAW,IAC7BqB,EAAUrB,EAAVqB,MAMR,OALKtB,EAAIsB,GAGPtB,EAAIsB,GAAOyD,KAAK9E,GAFhBD,EAAIsB,GAAS,CAACrB,GAITD,IACN,KAqB6DsB,IAAU,GAC1E,OAAO,mBACJ/B,EAAUC,SAAU,WACnB,OAAOc,EAAmBV,EAAYL,EAAUC,QAASsF,OAFtD,cAIJvF,EAAUE,WAAY,WACrB,OAAOa,EAAmBV,EAAYL,EAAUE,UAAWqF,OALxD,cAOJvF,EAAUG,iBAAkB,WAC3B,OAAOY,EAAmBV,EAAYL,EAAUC,QAASsF,IAAQzE,OAAO,MARrE,cAUJd,EAAUI,YAAa,WACtB,IAAMqF,EAAc1E,EAAmBV,EAAYL,EAAUC,QAASsF,IAChEG,EAAeD,EAAY3E,OAAO,GAAG,GAAGR,SAASQ,MAAM,EAAG,GAChE,OAAO2E,EAAY1C,QAAO,SAACrC,GAAD,OAAWA,EAAMJ,SAAS0C,WAAW0C,SAb5D,GAeLpF,KIFWqF,CAAgBrB,EAAM/C,UAAWzB,EAAiB4B,MAAO9B,EAAc8B,OAEtD8C,GACxBoB,EAAiBhC,EAAYpC,EAAQ7B,EAAkBC,EAAegC,GACtEiE,EAAoBjC,EAAY1C,OAAO4E,OAAO9F,GAAYH,EAAqBC,GAC/EiG,EAAkBlE,EAzCA,SAACxD,GACzB,OAAO,2BAAO2H,UAAU,qBACtB,+BACE,wBAAIA,UAAU,8BACZ,qCACA,oCACA,wBAAIA,UAAU,kCAAd,SACA,wBAAIA,UAAU,kCAAd,WAED3H,EAAK+C,KAAI,SAACV,EAAOuF,GAAR,OAAgB,wBAAIhF,IAAKgF,EAAKD,UAAU,8BAChD,4BAAKtF,EAAMqB,OACX,4BAAKrB,EAAMC,MACX,wBAAIqF,UAAU,kCAAkCtF,EAAME,OACtD,wBAAIoF,UAAU,kCAAkCtF,EAAMG,cA4BbqF,CAAkBrE,GAAzB,KAExC,OACE,yBAAKmE,UAAU,eACb,yBAAKA,UAAU,6BACb,yBAAKA,UAAU,qBAAf,gBAAkDpG,EAAc+B,MAAhE,MAA2E7B,EAAiB4B,OAC5F,yBAAKsE,UAAU,0BACb,yBAAKA,UAAU,wBAAwBJ,GACvC,yBAAKI,UAAU,wBAAwBH,KAG3C,yBAAKG,UAAU,qBACZrB,GAEFoB,GACD,yBAAKC,UAAU,0BACZD,O,OCxFMI,MARf,WACE,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,QCANI,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUhD,MHKLA,GGJH,kBAAC,EAAD,QAGJiD,SAASC,eAAe,W","file":"static/js/main.eb6639db.chunk.js","sourcesContent":["import { call, put, takeLatest } from 'redux-saga/effects';\n\nconst doFetch = ({ processAs, fetchArgs }) => () =>\n  fetch(...fetchArgs)\n    .then((response) => {\n      if (response.status !== 200 ) {\n        throw new Error(`${response.status}: ${response.statusText}`);\n      }\n      return response[processAs]();\n    })\n    .then((data) =>  ({ data }))\n    .catch((err) => ({ err }));\n\nfunction* request(action) {\n  const { type, payload: { processAs, fetchArgs } } = action;\n  const _type = type.replace('_REQUEST', '');\n\n  try {\n    const { data, err } = yield call(doFetch({ processAs, fetchArgs }));\n    if (err) { throw err; }\n    yield put({ type: `${_type}_SUCCESS`, payload: data });\n  } catch (err) {\n    yield put({ type: `${_type}_FAILURE`, payload: err });\n  }\n}\n\nfunction* universalHTTPRequestSaga() {\n  yield takeLatest((action) => (action.type.endsWith('_REQUEST')), request);\n}\n\nexport default universalHTTPRequestSaga;","import { all } from 'redux-saga/effects';\nimport universalHTTPRequestSaga from \"./universalHTTPRequestSaga\";\n\nexport default function* rootSaga() {\n  yield all([\n    universalHTTPRequestSaga()\n  ]);\n}","\nexport const COVID_DATA_REQUEST = 'COVID_DATA_REQUEST';\nexport const COVID_DATA_SUCCESS = 'COVID_DATA_SUCCESS';\nexport const COVID_DATA_FAILURE = 'COVID_DATA_FAILURE';\nexport const SET_SELECTED_STATE = 'SET_SELECTED_STATE';\nexport const SET_SELECTED_INTERVAL = 'SET_SELECTED_INTERVAL';\nexport const SET_DRILL_DOWN_DATA = 'SET_DRILL_DOWN_DATA';\n\nexport const fetchCovidData = () => (dispatch) => {\n  dispatch({\n    type: COVID_DATA_REQUEST,\n    payload: {\n      processAs: 'text',\n      fetchArgs: [\n        // https://github.com/nytimes/covid-19-data\n        // 'https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv'\n        '/covid_data.csv' // local\n      ]\n    }\n  });\n};\n\nexport const setSelectedState = (selectedState) => (dispatch) => {\n  dispatch({\n    type: SET_SELECTED_STATE,\n    payload: selectedState\n  });\n};\n\nexport const setSelectedInterval = (selectedInterval) => (dispatch) => {\n  dispatch({\n    type: SET_SELECTED_INTERVAL,\n    payload: selectedInterval\n  });\n};\n\nexport const setDrillDownData = (selectedInterval) => (dispatch) => {\n  dispatch({\n    type: SET_DRILL_DOWN_DATA,\n    payload: selectedInterval\n  });\n};","export const ALL_STATES = 'All';\nexport const INTERVALS = {\n  BY_DAYS: 'By Days',\n  BY_MONTHS: 'By Months',\n  LAST_SEVEN_DAYS: 'Last Seven Days',\n  LAST_MONTH: 'Last Month'\n};","\nimport { ALL_STATES, INTERVALS } from './CovidChart.constants';\n\nexport const parserCovidDataCSV = (str) => {\n  // current csv data represents total cases/deaths accumulated for that state and that day\n  // we return new cases/deaths instead for that state and that day\n  const previousCases = {};\n  const states = new Set();\n  const lines = str.split('\\n').slice(1).map((line) => {\n    const [date, state, _, cases, deaths] = line.split(',');\n    states.add(state);\n    const newCases = cases - ((previousCases[state] || {}).cases || 0);\n    const newDeaths = deaths - ((previousCases[state] || {}).deaths || 0);\n\n    previousCases[state] = { cases, deaths };\n\n    return {\n      date,\n      state,\n      /*\n      newDeaths might be negative sometimes\n      Quote:\n      This can occur when a state or county corrects an error in the number of cases or deaths\n      they've reported in the past, or when a state moves cases from one county to another\n      */\n      cases: newCases < 0 ? 0 : newCases,\n      deaths: newDeaths < 0 ? 0 : newDeaths // correction\n      // cases: newCases,\n      // deaths: newDeaths // should we allow negative newDeaths ?\n    }\n  });\n\n  return [lines, Array.from(states).sort((a, b) => a < b ? -1 : a > b ? 1 : 0)];\n};\n\nexport const groupByStates = (entries) => {\n  return entries.reduce((acc, entry) => {\n    const { state } = entry;\n    if (!acc[state]) {\n      acc[state] = [entry];\n    } else {\n      acc[state].push(entry);\n    }\n    return acc;\n  }, {});\n};\n\nexport const aggregateBy = (interval, entries) => {\n  return entries.reduce((acc, entry) => {\n    const { date, cases, deaths } = entry;\n    const slice = interval === INTERVALS.BY_MONTHS ? date.slice(0, 7) : date;\n    acc[slice] = {\n      cases: ((acc[slice] || {}).cases || 0) + cases,\n      deaths: ((acc[slice] || {}).deaths || 0) + deaths,\n    };\n    return acc;\n  }, {});\n};\n\nexport const aggregationToArray = (aggObj, { key = 'interval' } = {}) => {\n  return Object.keys(aggObj)\n    .map((_key) => ({ [key]: _key, ...aggObj[_key] }));\n};\n\nexport const getFilteredData = (data, interval, state) => {\n  const _data = state === ALL_STATES ? data : groupByStates(data)[state] || [];\n  return {\n    [INTERVALS.BY_DAYS]: () => {\n      return aggregationToArray(aggregateBy(INTERVALS.BY_DAYS, _data));\n    },\n    [INTERVALS.BY_MONTHS]: () => {\n      return aggregationToArray(aggregateBy(INTERVALS.BY_MONTHS, _data));\n    },\n    [INTERVALS.LAST_SEVEN_DAYS]: () => {\n      return aggregationToArray(aggregateBy(INTERVALS.BY_DAYS, _data)).slice(-7);\n    },\n    [INTERVALS.LAST_MONTH]: () => {\n      const _dataByDays = aggregationToArray(aggregateBy(INTERVALS.BY_DAYS, _data));\n      const _lastDayDate = _dataByDays.slice(-1)[0].interval.slice(0, 7);\n      return _dataByDays.filter((entry) => entry.interval.startsWith(_lastDayDate));\n    }\n  }[interval]();\n};\n\nexport const getDrillDownData = (data, interval) => {\n  if (interval.length === 10) { // per day\n    return data.filter((entry) => entry.date === interval);\n  }\n  return aggregationToArray(data.filter((entry) => entry.date.startsWith(interval)).reduce((acc, entry) => {\n    const { date, state, cases, deaths } = entry;\n    acc[state] = {\n      cases: ((acc[state] || {}).cases || 0) + cases,\n      deaths: ((acc[state] || {}).deaths || 0) + deaths,\n      date: date.slice(0, 7)\n    }\n    return acc;\n  }, {}), { key: 'state' }).sort((a, b) => a.state < b.state ? -1 : a.state > b.state ? 1 : 0);\n}","import {\n  COVID_DATA_REQUEST,\n  COVID_DATA_SUCCESS,\n  COVID_DATA_FAILURE,\n  SET_SELECTED_STATE,\n  SET_SELECTED_INTERVAL,\n  SET_DRILL_DOWN_DATA\n} from './CovidChart.actions';\n\nimport { parserCovidDataCSV, getDrillDownData } from '../CovidChart.helpers';\nimport { INTERVALS, ALL_STATES } from '../CovidChart.constants';\n\nconst defaultState = {\n  covidData: null,\n  states: null,\n  errorRequest: null,\n  selectedState: { value: ALL_STATES, label: ALL_STATES },\n  defaultSelectedState: { value: ALL_STATES, label: ALL_STATES },\n  selectedInterval: { value: INTERVALS.BY_MONTHS, label: INTERVALS.BY_MONTHS },\n  drillDownData: null\n};\n\nconst reducers = {\n  [COVID_DATA_REQUEST]: (action, state) => {\n    return {\n      ...state,\n      covidData: null,\n      states: null,\n      errorRequest: null\n    };\n  },\n  [COVID_DATA_SUCCESS]: (action, state) => {\n    const { payload } = action;\n    const [covidData, states] = parserCovidDataCSV(payload);\n    return {\n      ...state,\n      covidData,\n      states\n    };\n  },\n  [COVID_DATA_FAILURE]: (action, state) => {\n    const { payload } = action;\n    return {\n      ...state,\n      errorRequest: payload\n    };\n  },\n  [SET_SELECTED_STATE]: (action, state) => {\n    const { payload } = action;\n    return {\n      ...state,\n      selectedState: payload,\n      drillDownData: null\n    };\n  },\n  [SET_SELECTED_INTERVAL]: (action, state) => {\n    const { payload } = action;\n    return {\n      ...state,\n      selectedInterval: payload,\n      drillDownData: null\n    };\n  },\n  [SET_DRILL_DOWN_DATA]: (action, state) => {\n    const { payload } = action;\n    if (!payload) {\n      return {\n        ...state,\n        drillDownData: null\n      };\n    }\n    return {\n      ...state,\n      drillDownData: getDrillDownData(state.covidData, payload)\n    };\n  }\n};\n\nexport default (state = defaultState, action) => {\n  return reducers[action.type] ? reducers[action.type](action, state) : state;\n}","import { combineReducers } from 'redux';\nimport covidChart from '../CovidChart/Redux/CovidChart.reducer';\nconst combinedReducers = combineReducers({\n  covidChart\n});\nexport default combinedReducers;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport createSagaMiddleware from 'redux-saga';\nimport rootSaga from \"../Saga/rootSaga\";\nimport rootReducer from './rootReducer';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk, sagaMiddleware)\n);\n\nexport default function configureStore() {\n  return store;\n}\n\nsagaMiddleware.run(rootSaga);","import React, { useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport {\n  BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend,\n  ResponsiveContainer\n} from 'recharts';\nimport Select from 'react-select'\n\nimport * as covidChartActions from './Redux/CovidChart.actions';\nimport { getFilteredData } from './CovidChart.helpers';\nimport './CovidCharts.css';\nimport { INTERVALS } from './CovidChart.constants';\n\nconst getBarChart = (data, onChartClick) => {\n  return (\n    <ResponsiveContainer>\n      <BarChart\n        onClick={onChartClick}\n        data={data}\n        margin={{ top: 20, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"interval\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Bar dataKey=\"deaths\" stackId=\"a\" fill=\"indianred\" />\n        <Bar dataKey=\"cases\" stackId=\"a\" fill=\"orange\" />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n\nconst getDropDown = (items, onChange, value, firstValue) => {\n  const options = (firstValue ? [firstValue] : [])\n    .concat(items.map((item) => ({ value: item, label: item })));\n  return (\n    <Select value={value} options={options} onChange={onChange} />\n  )\n};\n\nconst getDrillDownTable = (data) => {\n  return <table className=\"covid-chart-table\">\n    <tbody>\n      <tr className=\"covid-chart-table-head-row\">\n        <th>State</th>\n        <th>Date</th>\n        <th className=\"covid-chart-table-numeric-cell\">Cases</th>\n        <th className=\"covid-chart-table-numeric-cell\">Deaths</th>\n      </tr>\n      {data.map((entry, idx) => <tr key={idx} className=\"covid-chart-table-body-row\">\n        <td>{entry.state}</td>\n        <td>{entry.date}</td>\n        <td className=\"covid-chart-table-numeric-cell\">{entry.cases}</td>\n        <td className=\"covid-chart-table-numeric-cell\">{entry.deaths}</td>\n      </tr>)}\n    </tbody>\n  </table>;\n};\n\nconst CovidChart = (props) => {\n  const {\n    fetchCovidData, covidData,\n    states, setSelectedState, selectedState, defaultSelectedState,\n    setSelectedInterval, selectedInterval,\n    drillDownData, setDrillDownData\n  } = props;\n\n  useEffect(fetchCovidData, []);\n  const onChartClick = useCallback((data) => {\n    setDrillDownData(data && data.activeLabel);\n  }, []);\n\n  if (!covidData) {\n    return 'Loading ...';\n  }\n\n  const data = getFilteredData(props.covidData, selectedInterval.value, selectedState.value);\n\n  const bar = getBarChart(data, onChartClick);\n  const statesDropDown = getDropDown(states, setSelectedState, selectedState, defaultSelectedState);\n  const intervalsDropDown = getDropDown(Object.values(INTERVALS), setSelectedInterval, selectedInterval);\n  const drillDownTable = !drillDownData ? null : getDrillDownTable(drillDownData);\n\n  return (\n    <div className=\"covid-chart\">\n      <div className=\"covid-chart-menu clearfix\">\n        <div className=\"covid-chart-title\">Covid Chart: { selectedState.label } - {selectedInterval.value}</div>\n        <div className=\"covid-chart-menu-right\">\n          <div className=\"covid-chart-dropdown\">{statesDropDown}</div>\n          <div className=\"covid-chart-dropdown\">{intervalsDropDown}</div>\n        </div>\n      </div>\n      <div className=\"covid-chart-graph\">\n        {bar}\n      </div>\n      {drillDownTable &&\n      <div className=\"covid-chart-drill-down\">\n        {drillDownTable}\n      </div>}\n    </div>\n  );\n}\n\nCovidChart.propTypes = {\n  fetchCovidData: PropTypes.func.isRequired,\n  covidData: PropTypes.arrayOf(PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    cases: PropTypes.number.isRequired,\n    deaths: PropTypes.number.isRequired\n  })),\n  setSelectedState: PropTypes.func.isRequired,\n  states: PropTypes.arrayOf(PropTypes.string),\n  selectedState: PropTypes.shape({ value: PropTypes.string, label: PropTypes.string }),\n  defaultSelectedState: PropTypes.shape({ value: PropTypes.string, label: PropTypes.string }),\n  setSelectedInterval: PropTypes.func.isRequired,\n  selectedInterval: PropTypes.shape({ value: PropTypes.string, label: PropTypes.string }),\n  drillDownData: PropTypes.arrayOf(PropTypes.shape({\n    date: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    cases: PropTypes.number.isRequired,\n    deaths: PropTypes.number.isRequired\n  })),\n  setDrillDownData: PropTypes.func.isRequired\n};\n\nconst mapStateToProps = state => state.covidChart;\nconst mapDispatchToProps = dispatch => bindActionCreators(covidChartActions, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CovidChart);\n","import React from 'react';\nimport CovidChart from './CovidChart/CovidChart';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <CovidChart />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './Redux/store';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={configureStore()}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}